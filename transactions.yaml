openapi: 3.0.3
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase.
  version: 1.0.0
  termsOfService: 'http://swagger.io/terms/'
servers:
  - url: http://localhost:3001/api/v1
    description: Local development server
tags:
  - name: Users
    description: Endpoints related to managing users.
  - name: Transactions
    description: Endpoints related to managing transactions.
paths:
  /user/login:
    post:
      tags:
        - Users
      summary: Login
      description: API for Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/signup:
    post:
      tags:
        - Users
      summary: Signup
      description: API for Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Signup successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/profile:
    post:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: Fetch user profile
      description: API for retrieving user profile
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
    put:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: Update user profile
      description: API for updating user profile attributes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /transactions/{accountId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Transactions
      summary: Retrieve all transactions for a specific account and month
      description: Fetch transactions for a given account, month, and year
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: month
          in: query
          required: true
          schema:
            type: integer
        - name: year
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid parameters
        '500':
          description: Server error

  /transactions/{accountId}/{transactionId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Transactions
      summary: Get transaction details for a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Not found

    put:
      security:
        - BearerAuth: []
      tags:
        - Transactions
      summary: Update transaction category and/or notes for a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Shopping
                notes:
                  type: string
                  example: Gift for birthday
      responses:
        '200':
          description: Transaction updated
        '400':
          description: Invalid input
        '404':
          description: Not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string

    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string

    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object

    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string

    Transaction:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        amount:
          type: number
        accountId:
          type: string
        category:
          type: string
          enum:
            - Food
            - Rent
            - Entertainment
            - Transportation
            - Health
            - Shopping
            - Bills
            - Other
        notes:
          type: string
